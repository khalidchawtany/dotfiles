bind-key        C-o rotate-window
bind-key        C-z suspend-client
bind-key      Space next-layout
bind-key          ! break-pane
bind-key          % split-window -h
bind-key          & confirm-before -p "kill-window #W? (y/n)" kill-window
bind-key          ( switch-client -p
bind-key          ) switch-client -n
bind-key          . command-prompt "move-window -t '%%'"
bind-key          0 select-window -t :0
bind-key          1 select-window -t :1
bind-key          2 select-window -t :2
bind-key          3 select-window -t :3
bind-key          4 select-window -t :4
bind-key          5 select-window -t :5
bind-key          6 select-window -t :6
bind-key          7 select-window -t :7
bind-key          8 select-window -t :8
bind-key          9 select-window -t :9
bind-key          : command-prompt
bind-key          = choose-buffer
bind-key          ? list-keys
bind-key          D choose-client
bind-key          ] paste-buffer
bind-key          c new-window
bind-key          d detach-client
bind-key          f command-prompt "find-window '%%'"
bind-key          i display-message
bind-key          l last-window
bind-key          n next-window
bind-key          o select-pane -t :.+
bind-key          p paste-buffer
bind-key          q display-panes
bind-key          s choose-tree
bind-key          t clock-mode
bind-key          w choose-window
bind-key          x confirm-before -p "kill-pane #P? (y/n)" kill-pane
bind-key          z resize-pane -Z
bind-key          { swap-pane -U
bind-key          } swap-pane -D
bind-key      PPage copy-mode -u
bind-key -r      Up select-pane -U
bind-key -r    Down select-pane -D
bind-key        M-1 select-layout even-horizontal
bind-key        M-2 select-layout even-vertical
bind-key        M-3 select-layout main-horizontal
bind-key        M-4 select-layout main-vertical
bind-key        M-5 select-layout tiled
bind-key        M-n next-window -a
bind-key        M-o rotate-window -D
bind-key        M-p previous-window -a
bind-key -r    M-Up resize-pane -U 5
bind-key -r  M-Down resize-pane -D 5
bind-key -r  M-Left resize-pane -L 5
bind-key -r M-Right resize-pane -R 5
bind-key -r    C-Up resize-pane -U
bind-key -r  C-Down resize-pane -D
bind-key -r  C-Left resize-pane -L
bind-key -r C-Right resize-pane -R






#{{{ Key Bindings


    # set Ctrl-a as the default prefix key combination
    # and unbind C-b to free it up
    set -g prefix C-a
    unbind C-b


    # use send-prefix to pass C-a through to application
    bind C-a send-prefix

    # reload ~/.tmux.conf using PREFIX r
    bind R source-file ~/.tmux.conf \; display "Reloaded!"

    # use PREFIX | to split window horizontally and PREFIX - to split vertically
    bind _ split-window -v
    bind - split-window -v -p 20
    bind \ split-window -h -p 23
    bind | split-window -h

    # Make the current window the first window
    bind T swap-window -t 1
    # Make the current window the last window
    #bind B run 'tmux list-windows | cut -f1 -d ':'|sort -n -r|head -n 1|xargs -I % tmux swap-window -t:%'
    bind B run "echo $((1+$(tmux list-windows | cut -f1 -d ':'|sort -n -r|head -n 1)))|xargs -I % tmux move-window -t:% && tmux move-window -r"

    # Move the current window
    bind -r Right swap-window -t +1
    bind -r  Left swap-window -t -1

    #Zoom In/Out using Enter
    bind Enter resize-pane -Z


    #Press Enter to toggle automatic renaming
    #bind  Enter if-shell '[ $(tmux show-window-options | grep "^allow-rename.*" | cut -f2 -d " ") = "off" ]' 'set-window-option allow-rename on' 'set-window-option allow-rename off'
    #bind  Enter if-shell '[ $(tmux show-window-options | grep "^allow-rename.*" | cut -f2 -d " ") = "off" ]' 'set-window-option allow-rename on' 'set-window-option allow-rename off; run-shell "tmux command-prompt -I \"#W\" \"rename-window '%%'\" "'
    bind  r if-shell '[ $(tmux show-window-options | grep "^allow-rename.*" | cut -f2 -d " ") = "off" ]' 'set-window-option allow-rename on' 'set-window-option allow-rename off; run-shell "tmux command-prompt -I \"#W\" \"rename-window '%%'\" "'

    #bind HOME set -g status
    bind SPACE set -g status

#; command-prompt -I #W "rename-window \'%%\'
#set-option -g allow-rename off
#Kill Window
    unbind k
    bind k confirm-before "kill-window"


    unbind  PageDown
    #bind  PageDown if 'tmx showenv -g TmuxKeyStatus' 'setenv -g TmuxKeyStatus On; refresh-client -S; display "Nav On"; source-file /Volumes/Home/dotfiles/zsh/PlugIns/tmux/tmux.navkeys.conf' 'setenv -g TmuxKeyStatus Off; refresh-client -S; display "Nav Off"; unbind-key -a; source-file /Volumes/Home/dotfiles/zsh/PlugIns/tmux/tmux.binding.conf'
    #bind PageDown if '[ "$(tmux showenv -g TmuxKeyStatus)" == "TmuxKeyStatus=On" ]' ' setenv -g -r TmuxKeyStatus; refresh-client -S; unbind-key -a; source-file /Volumes/Home/dotfiles/zsh/PlugIns/tmux/tmux.binding.conf' 'setenv -g TmuxKeyStatus On; refresh-client -S; source-file /Volumes/Home/dotfiles/zsh/PlugIns/tmux/tmux.navkeys.conf'

    #bind PageDown if '[ "$(tmux showenv -g TmuxKeyStatus)" == "TmuxKeyStatus=On" ]' ' setenv -g  TmuxKeyStatus Off; refresh-client -S; unbind-key -a; source-file /Volumes/Home/dotfiles/zsh/PlugIns/tmux/tmux.binding.conf' 'setenv -g TmuxKeyStatus On; refresh-client -S; source-file /Volumes/Home/dotfiles/zsh/PlugIns/tmux/tmux.navkeys.conf'
    bind Ãš if '[ "$(tmux showenv -g TmuxKeyStatus)" == "TmuxKeyStatus=On" ]' ' setenv -g  TmuxKeyStatus Off; refresh-client -S; unbind-key -a; source-file /Volumes/Home/dotfiles/zsh/PlugIns/tmux/tmux.binding.conf' 'setenv -g TmuxKeyStatus On; refresh-client -S; source-file /Volumes/Home/dotfiles/zsh/PlugIns/tmux/tmux.navkeys.conf'

#This will make sure proper colors are set in the tmux pane
# This is needs t be put in this file and another in the tmux.keybinding.conf
# and the order of the of sourcing these two in the tmux.conf ig SIGNIFICANT!

      set -g status-right "#[bg=Red] Nav:#(tmux showenv -g TmuxKeyStatus | sed 's/TmuxKeyStatus=//') #[bg=default] Up #( uptime | awk '{print $3}'|sed 's/,//')"


    # and use C-h and C-l to cycle thru panes
    # bind -r C-H select-window -t :-
    # bind -r C-L select-window -t :+

    # resize panes using PREFIX H, J, K, L
    bind -r H resize-pane -L 1
    bind -r J resize-pane -D 1
    bind -r K resize-pane -U 1
    bind -r L resize-pane -R 1

    # setup 'v' to begin selection as in Vim
    bind-key -t vi-copy v begin-selection
    bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

    # update default binding of 'Enter' to also use copy-pipe
    unbind -t vi-copy Enter
    bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

    bind y run 'tmux save-buffer - | reattach-to-user-namespace pbcopy '
    bind C-y run 'tmux save-buffer - | reattach-to-user-namespace pbcopy '

    # Copy/paste to system clipboard
    bind C-c run "tmux save-buffer - | reattach-to-user-namespace pbcopy"
    bind C-v run "reattach-to-user-namespace pbpaste | tmux load-buffer - && tmux paste-buffer"

    #bind / send-keys -R \; clear-history
    unbind BSpace
    bind BSpace send-keys -R \; clear-history  \; send-keys Enter

    unbind [
    bind Escape copy-mode
    #bind Enter copy-mode

    # quick pane cycling
    unbind ^F
    bind ^F select-pane -t :.+

#}}} _Key Bindings





